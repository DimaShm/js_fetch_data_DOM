{"version":3,"sources":["scripts/main.js"],"names":["url","getPhones","promise","then","response","ok","setTimeout","Promise","reject","Error","headers","get","includes","json","phones","getPhonesDetails","catch","error","alert","phonesWithDetails","phonesName","forEach","phone","push","name","length","createList","list","document","createElement","phoneName","item","innerText","append","body","fetch"],"mappings":";AAAA,aAEA,IAAMA,EACF,wEAIJ,SAASC,EAAUC,GACjBA,EAAQC,KAAK,SAAAC,GAOP,GANCA,EAASC,IACZC,WAAW,WACFC,OAAAA,QAAQC,OAAO,IAAIC,MAAnB,gBACN,MAGAL,EAASM,QAAQC,IAAI,gBAAgBC,SAAS,oBAC1CL,OAAAA,QAAQC,OAAO,IAAIC,MAAM,mCAIpCP,EAAQC,KAAK,SAAAC,GAAYA,OAAAA,EAASS,SAC/BV,KAAK,SAAAW,GAGGA,OAFPC,EAAiBD,GAEVA,IAERE,MAAM,SAAAC,GAASC,OAAAA,MAAMD,KAG1B,SAASF,EAAiBD,GAClBK,IAAAA,EAAoB,GACpBC,EAAa,GAOfA,OALJN,EAAOO,QAAQ,SAAAC,GACbH,EAAkBI,KAAKD,GACvBF,EAAWG,KAAKD,EAAME,QAGE,IAAtBJ,EAAWK,OACNlB,QAAQC,OAAO,IAAIC,MAAM,cAGlCiB,EAAWN,GAEJD,GAGT,SAASO,EAAWN,GACZO,IAAAA,EAAOC,SAASC,cAAc,MAEpCT,EAAWC,QAAQ,SAAAS,GACXC,IAAAA,EAAOH,SAASC,cAAc,MAEpCE,EAAKC,UAAYF,EACjBH,EAAKM,OAAOF,KAEdH,SAASM,KAAKD,OAAON,GAnDvB1B,EAAUkC,MAAMnC","file":"main.7d54597d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\ngetPhones(fetch(url));\n\nfunction getPhones(promise) {\n  promise.then(response => {\n    if (!response.ok) {\n      setTimeout(() => {\n        return Promise.reject(new Error(`can't load`));\n      }, 5000);\n    }\n\n    if (!response.headers.get('content-type').includes('application/json')) {\n      return Promise.reject(new Error('application is not supported'));\n    }\n  });\n\n  promise.then(response => response.json())\n    .then(phones => {\n      getPhonesDetails(phones);\n\n      return phones;\n    })\n    .catch(error => alert(error));\n}\n\nfunction getPhonesDetails(phones) {\n  const phonesWithDetails = [];\n  const phonesName = [];\n\n  phones.forEach(phone => {\n    phonesWithDetails.push(phone);\n    phonesName.push(phone.name);\n  });\n\n  if (phonesName.length === 0) {\n    return Promise.reject(new Error('0 phones'));\n  }\n\n  createList(phonesName);\n\n  return phonesWithDetails;\n}\n\nfunction createList(phonesName) {\n  const list = document.createElement('ul');\n\n  phonesName.forEach(phoneName => {\n    const item = document.createElement('li');\n\n    item.innerText = phoneName;\n    list.append(item);\n  });\n  document.body.append(list);\n}\n"]}